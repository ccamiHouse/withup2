---
description: API design and data structure conventions
---
# API 설계 및 데이터 구조 가이드

## 데이터 모델

### Study (스터디)
```javascript
{
  id: string,                    // 고유 식별자
  title: string,                 // 스터디 제목
  description: string,           // 스터디 설명
  category: string,              // 카테고리 (예: "개발/프로그래밍")
  location: string,              // 활동 지역 (예: "서울시 강남구")
  isOnline: boolean,             // 온라인 여부
  period: string,                // 활동 기간 (예: "2개월")
  startDate: string,             // 시작 날짜 (ISO 8601)
  endDate: string,               // 종료 날짜 (ISO 8601)
  maxMembers: number,            // 최대 인원
  currentMembers: number,        // 현재 인원
  leaderId: string,              // 리더 ID
  status: string,                // 상태 ("모집중", "진행중", "완료")
  roles: {                       // 역할 분담
    leader: string,              // 리더 ID
    secretary: string,           // 서기 ID
    members: string[]            // 멤버 ID 배열
  },
  tags: string[],                // 태그 배열
  createdAt: string,             // 생성 시간 (ISO 8601)
  updatedAt: string              // 수정 시간 (ISO 8601)
}
```

### User (사용자)
```javascript
{
  id: string,                    // 고유 식별자
  name: string,                  // 이름
  email: string,                 // 이메일
  profileImage: string,          // 프로필 이미지 URL
  bio: string,                   // 자기소개
  interests: string[],           // 관심사 배열
  location: string,              // 거주 지역
  joinedStudies: string[],       // 참여 중인 스터디 ID 배열
  createdStudies: string[],      // 개설한 스터디 ID 배열
  createdAt: string,             // 가입 시간
  updatedAt: string              // 수정 시간
}
```

### Attendance (출석)
```javascript
{
  id: string,                    // 고유 식별자
  studyId: string,               // 스터디 ID
  userId: string,                // 사용자 ID
  date: string,                  // 출석 날짜 (ISO 8601)
  status: string,                // 상태 ("출석", "지각", "결석")
  note: string,                  // 비고
  createdAt: string              // 기록 시간
}
```

### Schedule (일정)
```javascript
{
  id: string,                    // 고유 식별자
  studyId: string,               // 스터디 ID
  title: string,                 // 일정 제목
  description: string,           // 일정 설명
  startTime: string,             // 시작 시간 (ISO 8601)
  endTime: string,               // 종료 시간 (ISO 8601)
  location: string,              // 장소
  createdBy: string,             // 생성자 ID
  createdAt: string,             // 생성 시간
  updatedAt: string              // 수정 시간
}
```

### Announcement (공지사항)
```javascript
{
  id: string,                    // 고유 식별자
  studyId: string,               // 스터디 ID
  title: string,                 // 공지 제목
  content: string,               // 공지 내용
  authorId: string,              // 작성자 ID
  isPinned: boolean,             // 상단 고정 여부
  createdAt: string,             // 작성 시간
  updatedAt: string              // 수정 시간
}
```

### SideJob (사이드잡)
```javascript
{
  id: string,                    // 고유 식별자
  title: string,                 // 제목
  description: string,           // 설명
  company: string,               // 기업/의뢰자
  category: string,              // 카테고리
  compensation: string,          // 보상 (예: "시급 15,000원")
  duration: string,              // 기간
  requirements: string[],        // 요구사항 배열
  relatedStudies: string[],      // 연관 스터디 ID 배열
  status: string,                // 상태 ("모집중", "진행중", "완료")
  createdAt: string,             // 등록 시간
  updatedAt: string              // 수정 시간
}
```

## API 엔드포인트 설계 (향후 구현)

### 스터디 관련
```
GET    /api/studies              # 스터디 목록 조회
GET    /api/studies/:id          # 스터디 상세 조회
POST   /api/studies              # 스터디 개설
PATCH  /api/studies/:id          # 스터디 수정
DELETE /api/studies/:id          # 스터디 삭제

POST   /api/studies/:id/join     # 스터디 참여 신청
POST   /api/studies/:id/leave    # 스터디 탈퇴
```

### 사용자 관련
```
GET    /api/users/:id            # 사용자 정보 조회
PATCH  /api/users/:id            # 사용자 정보 수정
GET    /api/users/:id/studies    # 사용자의 스터디 목록
```

### 출석 관련
```
GET    /api/studies/:id/attendance       # 출석 목록
POST   /api/studies/:id/attendance       # 출석 체크
PATCH  /api/studies/:id/attendance/:aid  # 출석 수정
```

### 일정 관련
```
GET    /api/studies/:id/schedules        # 일정 목록
POST   /api/studies/:id/schedules        # 일정 생성
PATCH  /api/studies/:id/schedules/:sid   # 일정 수정
DELETE /api/studies/:id/schedules/:sid   # 일정 삭제
```

### 공지사항 관련
```
GET    /api/studies/:id/announcements    # 공지 목록
POST   /api/studies/:id/announcements    # 공지 작성
PATCH  /api/studies/:id/announcements/:aid  # 공지 수정
DELETE /api/studies/:id/announcements/:aid  # 공지 삭제
```

### 사이드잡 관련
```
GET    /api/sidejobs             # 사이드잡 목록
GET    /api/sidejobs/:id         # 사이드잡 상세
POST   /api/sidejobs/:id/apply   # 사이드잡 지원
```

## 응답 형식

### 성공 응답
```javascript
{
  success: true,
  data: { ... },
  message: "성공 메시지"
}
```

### 에러 응답
```javascript
{
  success: false,
  error: {
    code: "ERROR_CODE",
    message: "에러 메시지"
  }
}
```

### 페이지네이션
```javascript
{
  success: true,
  data: [...],
  pagination: {
    page: 1,
    limit: 20,
    total: 100,
    totalPages: 5
  }
}
```

## 필터링 및 검색

### 쿼리 파라미터
```
?category=개발/프로그래밍  # 카테고리 필터
?location=서울시           # 지역 필터
?isOnline=true            # 온라인 여부
?status=모집중             # 상태 필터
?search=파이썬             # 검색어
?sort=createdAt           # 정렬 기준
?order=desc               # 정렬 순서 (asc/desc)
?page=1                   # 페이지
?limit=20                 # 페이지당 항목 수
```

## 상태 코드
- `200` - 성공
- `201` - 생성 성공
- `400` - 잘못된 요청
- `401` - 인증 필요
- `403` - 권한 없음
- `404` - 찾을 수 없음
- `500` - 서버 오류

## 권한 관리

### 역할별 권한
- **리더 (Leader)**
  - 멤버 승인/추방
  - 일정 생성/수정/삭제
  - 공지사항 작성/수정/삭제
  - 스터디 수정/삭제
  
- **서기 (Secretary)**
  - 회의록 작성
  - 스터디 기록 관리
  - 공지사항 작성
  
- **멤버 (Member)**
  - 출석 확인
  - 자료 열람
  - 의견 작성

## 데이터 검증
- 모든 필수 필드는 서버에서 검증
- 날짜는 ISO 8601 형식 사용
- 문자열 길이 제한 적용
- 이메일 형식 검증
- 숫자 범위 검증

## 참고사항
- 향후 백엔드 구현 시 위 설계를 기준으로 함
- 현재는 Mock 데이터로 개발
- 실제 API 구현 시 보안(인증/인가) 추가 필요
